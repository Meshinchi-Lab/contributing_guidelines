[
  {
    "objectID": "git_github_overview.html",
    "href": "git_github_overview.html",
    "title": "Getting Started",
    "section": "",
    "text": "Standardization of Repositories\n\n\n\nA description of:\n\nNaming conventions for github repositories\nUsing data analysis notebook quarto templates\nInitializing the code repository using git and github",
    "crumbs": [
      "Home",
      "Getting Started"
    ]
  },
  {
    "objectID": "git_github_overview.html#github-repository-naming-conventions",
    "href": "git_github_overview.html#github-repository-naming-conventions",
    "title": "Getting Started",
    "section": "Github Repository Naming Conventions",
    "text": "Github Repository Naming Conventions\nRepositories have the following nomenclature for easy searching:\n\nExploratory Data Analysis and Research Projects with collaborators:\n\n\n[YEAR.MONTH.DAY]_[DATA-TYPE]_[SHORT-DESCRIPTION]\nExample: ‘2025.06.02_RNAseq_Bulk_T-ALL’\nExample with two data types: ‘2025.06.02_RNAseq_WGS_Bulk_T-ALL’\n\n\nGenomic Data pipelines and workflows:\n\n\n[DATA-TYPE]_[DATA-PROCESSING]_[WORKFLOW-TYPE]\nExample: ‘RNAseq_Fusion_Calling_Nextflow’\n\n\nR packages:\n\n\n[SHORT-NAME]_R_Package\nExample: ‘DeGSEA_R_Package’\n\n\nPython packages:\n\n\n[SHORT-NAME]_Py_Package\nExample: ‘DataValidator_Py_Package’",
    "crumbs": [
      "Home",
      "Getting Started"
    ]
  },
  {
    "objectID": "git_github_overview.html#initializing-the-repository",
    "href": "git_github_overview.html#initializing-the-repository",
    "title": "Getting Started",
    "section": "Initializing the Repository",
    "text": "Initializing the Repository\nBasic git commands to commit and push code to the lab github organization.\n\nFirst create a new directory name following the appropriate naming convention listed above.\n\nDATA_TYPE=\"RNAseq\" \nDESCRIPTION=\"Example_Repo\" \nOUTDIR=\"$(date +%Y.%m.%d)_${DATA_TYPE}_${DESCRIPTION}\"\n\necho $OUTDIR\n\nCreate a private remote repository in the Meshinchi-Lab lab github organization.\n\nThen repository name format is the organization name Meshinchi-Lab/ followed by the name of the analysis directory you just created.\nREPO=\"Meshinchi-Lab/${OUTDIR}\"\n\ngh repo create $REPO \\\n  --description \"An example R analysis template repo\" \\\n  --gitignore R \\\n  --license \"MIT\" \\\n  --add-readme \\\n  --clone \\\n  --private\nIf it’s successful, you will see: &gt; ✓ Created repository Meshinchi-Lab/2025.06.16_RNAseq_Example_Repo on GitHub &gt; https://github.com/Meshinchi-Lab/2025.06.16_RNAseq_Example_Repo &gt; ✓ Added remote https://github.com/Meshinchi-Lab/2025.06.16_RNAseq_Example_Repo.git\n\nChange directories into the new git hub repository you’ve just cloned (by using the --clone argument).\n\ncd $OUTDIR",
    "crumbs": [
      "Home",
      "Getting Started"
    ]
  },
  {
    "objectID": "git_github_overview.html#create-the-data-analysis-notebook-template",
    "href": "git_github_overview.html#create-the-data-analysis-notebook-template",
    "title": "Getting Started",
    "section": "Create the Data Analysis Notebook Template",
    "text": "Create the Data Analysis Notebook Template\n\nR with rmarkdown and quartoPython with jupyter notebooks and quarto\n\n\nThen use the quarto CLI to download the analyis quarto markdown document and follow the prompts. Be sure to select ‘No’ and avoid creating a new subdirectory.\nquarto use template Meshinchi-Lab/analysis_template\n# ? Do you trust the authors of this template (Y/n) › Yes\n# ? Create a subdirectory for template? (Y/n) › No\n\nYou will see the following output: &gt; Downloading [###################################] 0.0 &gt; [✓] Downloading &gt; [✓] Unzipping &gt; Preparing template files… &gt; [✓] Copying files… &gt; Files created: &gt; - 2025.06.16_RNAseq_Example_Repo.qmd\n\nThe 2025.06.16_RNAseq_Example_Repo.qmd will be the template for the EDA report. You can rename it if you want. You can now open the .qmd file in your text editor and start editing it. When you are ready to render the HTML report, run:\nquarto render 2025.06.16_RNAseq_Example_Repo.qmd\n\n\nAnother quarto template!",
    "crumbs": [
      "Home",
      "Getting Started"
    ]
  },
  {
    "objectID": "git_github_overview.html#commit-and-push-to-github",
    "href": "git_github_overview.html#commit-and-push-to-github",
    "title": "Getting Started",
    "section": "Commit and Push to Github",
    "text": "Commit and Push to Github\n\nFirst, add the quarto analysis template qmd file.\n\nIn this case, the qmd file is named the same as the directory you created, eg “2025.06.16_RNAseq_Example_Repo.qmd”. If you’ve renamed the qmd before committing the file, be sure to use the right name for the “$FILE” variable.\nFILE=\"${OUTDIR}.qmd\"\ngit status\ngit add $FILE\ngit status\n\nCommit the new template qmd file.\n\ngit commit -m \"Added analysis template\"\nWhen you make changes to the analysis qmd and create any new files, you will repeat steps 1 and 2 here. For brevity, it will essentially be repeating the 5 commands below as you make edits.\ngit status\ngit add [MY FILE THAT CHANGED] [A NEW FILE]\ngit commit -m \"describe what changed\"\ngit status\ngit log --oneline",
    "crumbs": [
      "Home",
      "Getting Started"
    ]
  },
  {
    "objectID": "git_github_overview.html#code-review-and-push-changes",
    "href": "git_github_overview.html#code-review-and-push-changes",
    "title": "Getting Started",
    "section": "Code Review and push changes",
    "text": "Code Review and push changes\nWe’ll be holding weekly code review / code commit gatherings to ensure that we’re only committing changes that we expect and have not added any files that may not belong on github, such as PDFs or power point presentations, and especially any sensitive data.\n\nOnce we all completed the code review / code commit partner checks, then you can push changes to the repository.\n\ngit push \n\ncheck that the repository looks the way you expect it to look using the following command:\n\ngh repo view --web \"${REPO}\"",
    "crumbs": [
      "Home",
      "Getting Started"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Meshinchi and Locatelli Github Contributing Guidelines",
    "section": "",
    "text": "This website is for documenting how to contribute to the Meshinchi and Locatelli Lab github organization(s).\n\n\n\n\n\n\n\nWelcome!\n\nThe goal of the lab documentation is to provide standardized procedures for creating, maintaining, and contributing to the Meshinchi and Locatelli Lab’s software and data analysis pipelines on github.\nAnalysis code and pipelines can be found in the lab github repository.\n\n\nObjectives\nLab members will be able to understand key concepts and have standardized workflows for using:\n\ncreating standardized github repositories\nusing git command line utility for version control\nusing github remote repository to host code and pipelines\ncreating standardized R Rmarkdown and quarto documents\ncreating standardized Python jupyter notebooks for analysis\nbest practices in security\nbest practices in code reviews\n\n\n\nPre-requisites\n\nfamiliarity with bash\nfamiliarity using the command line\nBasic knowledge of R and Python\n\n\n\n\nResources\n\n\n\n\n\n\nBash and using the command line interface\n\n\n\nIf you still need to gain basic working knowledge of using bash and the command line (terminal), then see the following tutorials in the resources section before following these steps."
  },
  {
    "objectID": "prerequisites.html",
    "href": "prerequisites.html",
    "title": "Software Dependencies and Pre-requisites",
    "section": "",
    "text": "Overview\n\n\n\nThis page contains README’s and internal lab documentation on how to contribute to the Meshinchi lab and Locatelli lab github organizations. Be sure to have the software requirements installed in order to use this guide.",
    "crumbs": [
      "Home",
      "Software Dependencies and Pre-requisites"
    ]
  },
  {
    "objectID": "prerequisites.html#software",
    "href": "prerequisites.html#software",
    "title": "Software Dependencies and Pre-requisites",
    "section": "Software",
    "text": "Software\nWe will be using R, Python, Quarto, with the integrated development editors (IDE) Rstudio and VSCode. Click on the links below to install the required software.\n\n\nR and Rstudio\nPython\ngithub CLI\nQuarto CLI\nVisual Studio Code\n\nAlternatively, use Posit cloud (formerly Rstudio Cloud). Posit cloud is free of charge for personal users, yet you need to sign up for a new user account and have internet connection.\n\nGit and Github\nTo get started, you will need to authenticate your access to the lab github organization so that you can create repositories and push changes.\n\n\n\n\n\n\nImportant\n\n\n\nYour github account (also known as your github profile), must be invited to the lab github organization before this can be completed.\n\n\n\nConfigure git for your github username and email account associated with your github account.\n\nOpen a new a new terminal and enter the following commands.\n# print out the current configuration \ngit config --global --list\n# if not already set, configure them. This example assumes you are using a gmail account.\ngit config --global user.name MY_GITHUB_USERNAME\ngit config --global user.email MY_GITHUB_EMAIL@gmail.com\ngit config --global init.defaultbranch main\n\nAuthenticate the gh CLI tool to connect to the lab github organization.\n\nEnter the following commands in the terminal. You will be prompted to ? Authenticate Git with your GitHub credentials? (Y/n) and select ‘Yes’. Follow the prompts on the command line to open a new web browser window to enter your username and password for github.\n# login to github using a web browser\ngh auth login --git-protocol 'HTTPS' --hostname GitHub.com --web\n\n# check that you are now authenticated\ngh auth status\nOnce you see this message that you are logged in, you were successfully authenticated.\n\n✓ Logged in to github.com account MY_GITHUB_USERNAME (keyring) - Active account: true - Git operations protocol: https - Token: gho_************************************ - Token scopes: ‘gist’, ‘read:org’, ‘repo’, ‘workflow’\n\n\n\nData\nThe datasets we use can be found here (insert link).\n\n\nCode\nThe R and Python packages, scripts, analysis notebooks, and data processing pipelines can be found at the Meshichi Lab github organization.\nRepositories have the following nomenclature for easy searching:\n\nData Analysis and Research Projects with collaborators:\n\n[YEAR.MONTH.DAY]_[DATA-TYPE]_[SHORT-DESCRIPTION]\nExample: ‘2025.06.02_RNAseq_Bulk_T-ALL’\nExample with two data types: ‘2025.06.02_RNAseq_WGS_Bulk_T-ALL’\n\nGenomic Data pipelines and workflows:\n\n[DATA-TYPE]_[DATA-PROCESSING]_[WORKFLOW-TYPE]\nExample: ‘RNAseq_Fusion_Calling_Nextflow’\n\nR packages:\n\n[SHORT-NAME]_R_Package\nExample: ‘DeGSEA_R_Package’\n\nPython packages:\n\n[SHORT-NAME]_Py_Package\nExample: ‘DataValidator_Py_Package’\n\n\n\n\nGetting Started\nSee the Getting Started page for the next steps to generate a new analysis or workflow code repository on the github.\nIf you still need to gain a working knowledge of using bash, R, and Python, then see the following Resources section below.\n\n\nResources\n\nBash and Command Line Tutorial\nA good place to start getting familair with common bash commands is to read the following tutorial. Be sure to complete the exercises in the box at the bottom of each page, starting with the ls command.\nFor more intermediate bash scripting, you can follow the tutorial here.s\n\n\nQuarto and Visual Studio Code Quick Start\nThe quarto CLI with VS Code editor quick start is a great tutorial to get familiarized with using quarto (.qmd) documents to generate exploratory analysis notebooks and reports.\n\n\nR and Rstudio Tutorial\nThe RStudio user guide can help you get started with the RStudio user interface, installing your first packages, and generating a quick plot using data.\nDetailed descriptions of the RStudio panels, panes, and tabsets can be found here as well.\n\n\nPython Tutorial\nStart by learning how the VS Code editor displays and runs python code.\nNext, you can follow along with the python tutorial using both the VS Code editor and interactively in a web browser by using the ‘try it yourself’ buttons.",
    "crumbs": [
      "Home",
      "Software Dependencies and Pre-requisites"
    ]
  },
  {
    "objectID": "prerequisites.html#git-and-github",
    "href": "prerequisites.html#git-and-github",
    "title": "Software Dependencies and Pre-requisites",
    "section": "Git and Github",
    "text": "Git and Github\nTo get started, you will need to authenticate your access to the lab github organization so that you can create repositories and push changes.\n\n\n\n\n\n\nImportant\n\n\n\nYour github account (also known as your github profile), must be invited to the lab github organization before this can be completed.\n\n\n\nConfigure git for your github username and email account associated with your github account.\n\nOpen a new a new terminal and enter the following commands.\n# print out the current configuration \ngit config --global --list\n# if not already set, configure them. This example assumes you are using a gmail account.\ngit config --global user.name MY_GITHUB_USERNAME\ngit config --global user.email MY_GITHUB_EMAIL@gmail.com\ngit config --global init.defaultbranch main\n\nAuthenticate the gh CLI tool to connect to the lab github organization.\n\nEnter the following commands in the terminal. You will be prompted to ? Authenticate Git with your GitHub credentials? (Y/n) and select ‘Yes’. Follow the prompts on the command line to open a new web browser window to enter your username and password for github.\n# login to github using a web browser\ngh auth login --git-protocol 'HTTPS' --hostname GitHub.com --web\n\n# check that you are now authenticated\ngh auth status\nOnce you see this message that you are logged in, you were successfully authenticated.\n\n✓ Logged in to github.com account MY_GITHUB_USERNAME (keyring) - Active account: true - Git operations protocol: https - Token: gho_************************************ - Token scopes: ‘gist’, ‘read:org’, ‘repo’, ‘workflow’",
    "crumbs": [
      "Home",
      "Software Dependencies and Pre-requisites"
    ]
  },
  {
    "objectID": "prerequisites.html#data",
    "href": "prerequisites.html#data",
    "title": "Software Dependencies and Pre-requisites",
    "section": "Data",
    "text": "Data\nThe datasets we use can be found here (insert link).",
    "crumbs": [
      "Home",
      "Software Dependencies and Pre-requisites"
    ]
  },
  {
    "objectID": "prerequisites.html#code",
    "href": "prerequisites.html#code",
    "title": "Software Dependencies and Pre-requisites",
    "section": "Code",
    "text": "Code\nThe R and Python packages, scripts, analysis notebooks, and data processing pipelines can be found at the Meshichi Lab github organization.\nRepositories have the following nomenclature for easy searching:\n\nData Analysis and Research Projects with collaborators:\n\n[YEAR.MONTH.DAY]_[DATA-TYPE]_[SHORT-DESCRIPTION]\nExample: ‘2025.06.02_RNAseq_Bulk_T-ALL’\nExample with two data types: ‘2025.06.02_RNAseq_WGS_Bulk_T-ALL’\n\nGenomic Data pipelines and workflows:\n\n[DATA-TYPE]_[DATA-PROCESSING]_[WORKFLOW-TYPE]\nExample: ‘RNAseq_Fusion_Calling_Nextflow’\n\nR packages:\n\n[SHORT-NAME]_R_Package\nExample: ‘DeGSEA_R_Package’\n\nPython packages:\n\n[SHORT-NAME]_Py_Package\nExample: ‘DataValidator_Py_Package’",
    "crumbs": [
      "Home",
      "Software Dependencies and Pre-requisites"
    ]
  },
  {
    "objectID": "prerequisites.html#getting-started",
    "href": "prerequisites.html#getting-started",
    "title": "Software Dependencies and Pre-requisites",
    "section": "Getting Started",
    "text": "Getting Started\nSee the Getting Started page for the next steps to generate a new analysis or workflow code repository on the github.\nIf you still need to gain a working knowledge of using bash, R, and Python, then see the following Resources section below.",
    "crumbs": [
      "Home",
      "Software Dependencies and Pre-requisites"
    ]
  },
  {
    "objectID": "prerequisites.html#resources",
    "href": "prerequisites.html#resources",
    "title": "Software Dependencies and Pre-requisites",
    "section": "Resources",
    "text": "Resources\n\nBash and Command Line Tutorial\nA good place to start getting familair with common bash commands is to read the following tutorial. Be sure to complete the exercises in the box at the bottom of each page, starting with the ls command.\nFor more intermediate bash scripting, you can follow the tutorial here.s\n\n\nQuarto and Visual Studio Code Quick Start\nThe quarto CLI with VS Code editor quick start is a great tutorial to get familiarized with using quarto (.qmd) documents to generate exploratory analysis notebooks and reports.\n\n\nR and Rstudio Tutorial\nThe RStudio user guide can help you get started with the RStudio user interface, installing your first packages, and generating a quick plot using data.\nDetailed descriptions of the RStudio panels, panes, and tabsets can be found here as well.\n\n\nPython Tutorial\nStart by learning how the VS Code editor displays and runs python code.\nNext, you can follow along with the python tutorial using both the VS Code editor and interactively in a web browser by using the ‘try it yourself’ buttons.",
    "crumbs": [
      "Home",
      "Software Dependencies and Pre-requisites"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Welcome to the Meshinchi Lab at Fred Hutch\nOur research laboratory is studying genomic expression of acute myeloid leukemia-restricted targets on the cell surface that are ideal for immunotherapeutic targeting with chimeric antigen receptor T-cell (CAR T) therapies, as well as identifying and validating target genes for further immunotherapy development.\nCurrently, Soheil Meshinchi, M.D., Ph.D., working in collaboration with Franco Locatelli, M.D., Ph.D. and Concetta Quintarelli, M.D., Ph.D. at the Bambino Gesù Children’s Hospital IRCCS in Rome, Italy, we are investigating the potential of CAR T-cell therapy in pediatric acute myeloid leukemia (AML) and T-Cell Acute Lymphoblastic Leukemia (T-ALL) patients.\n\n \n\n\n\n\n\n\n\nAbout\n\n\n\nThe Meshinchi and Locatelli Lab Group documentation for creating, maintaining, and contributing to the Meshinchi and Locatelli Lab’s software and data analysis pipelines on github.\n\n\n\n\nContact\n\nFred Hutch\nSoheil Meshinchi\nRhonda Ries\n\n\nOPBG\nFranco Locatelli\nConcetta Quintarelli"
  }
]